##
## Image that runs cargo cross to compile for armv7
##
FROM debian:buster-slim

ENV DEBIAN_FRONTEND=noninteractive
ENV CROSS_DOCKER_IN_DOCKER=true

# Install dependencies
RUN apt-get update && apt-get install -y build-essential curl git procps lsb-release docker.io libpq5 libpq-dev

# User info
ARG USERNAME=runner
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG USER_HOME=/home/$USERNAME
ARG DOCKER_NAME=docker_host
ARG DOCKER_GID
RUN test -n "$DOCKER_GID"


# Create a non-root user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && usermod -a -G staff $USERNAME \
    && groupadd --gid $DOCKER_GID $DOCKER_NAME \
    && usermod -a -G $DOCKER_NAME $USERNAME

# Setup env for rust
ENV RUSTUP_HOME=$USER_HOME/.rustup \
    CARGO_HOME=$USER_HOME/.cargo \
    PATH=$USER_HOME/.cargo/bin:$PATH

USER $USERNAME

RUN mkdir $USER_HOME/code && chown $USERNAME:$USERNAME $USER_HOME/code

WORKDIR $USER_HOME/code

# Install rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh \
    && chmod +x rustup-init.sh \
    && ./rustup-init.sh -y --default-toolchain nightly-gnu

# Install Rust components ( To know when to update, check https://rust-lang.github.io/rustup-components-history/armv7-unknown-linux-gnueabihf.html )
RUN rustup toolchain install nightly-2020-10-11 -c rls -c rust-analysis -c rust-src
RUN cargo install cross

USER root

# Clean up
RUN apt-get remove -y build-essential curl git \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/* \
    $$ rm $USER_HOME/code/rustup-init.sh

USER $USERNAME