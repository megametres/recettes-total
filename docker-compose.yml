version: "3"

services:
  rust:
    build:
      context: .
    container_name: "${PROJECT_NAME}_rust"
    command: tail -f /dev/null
    volumes:
      - ./api/:/home/api
    working_dir: /home/api
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_rust.rule=Host(`api.${PROJECT_BASE_URL}`)"
      - "traefik.http.services.${PROJECT_NAME}_rust.loadbalancer.server.port=80"
  postgres:
    image: postgres
    container_name: "${PROJECT_NAME}_postgres"
    environment:
      POSTGRES_PASSWORD: nbFQm5ge4NHjeXLngGPt4B3WRiUbKTNTboFvbvHqLQCDCz6q
      POSTGRES_USER: recipe_admin
      POSTGRES_DB: recipe
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - "./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - 5432:5432
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_postgres.rule=Host(`postgres.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:latest
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_traefik.rule=Host(`traefik.${PROJECT_BASE_URL}`)"
      - "traefik.http.services.${PROJECT_NAME}_traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.${PROJECT_NAME}_traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=megametres:$$2y$$05$$j/NZpVKwzUzwOiSlK/SjHOEw7zKCufZqRENwSIUjOwwccB3m4ntHC"

volumes:
  postgres_data:
